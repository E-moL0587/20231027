{"ast":null,"code":"var _regeneratorRuntime = require(\"C:/Users/\\u7AF9\\u5185 \\u6D77\\u6597/workspace/Hackathon/20231027/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/\\u7AF9\\u5185 \\u6D77\\u6597/workspace/Hackathon/20231027/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar createWorker = require('./createWorker');\nvar recognize = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(image, langs, options) {\n    var worker;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return createWorker(langs, 1, options);\n        case 2:\n          worker = _context2.sent;\n          return _context2.abrupt(\"return\", worker.recognize(image).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return worker.terminate();\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }))));\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function recognize(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar detect = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(image, options) {\n    var worker;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return createWorker('osd', 0, options);\n        case 2:\n          worker = _context4.sent;\n          return _context4.abrupt(\"return\", worker.detect(image).finally( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return worker.terminate();\n                case 2:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3);\n          }))));\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function detect(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  recognize: recognize,\n  detect: detect\n};","map":{"version":3,"names":["createWorker","require","recognize","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","image","langs","options","worker","wrap","_callee2$","_context2","prev","next","sent","abrupt","finally","_callee","_callee$","_context","terminate","stop","_x","_x2","_x3","apply","arguments","detect","_ref3","_callee4","_callee4$","_context4","_callee3","_callee3$","_context3","_x4","_x5","module","exports"],"sources":["C:/Users/竹内 海斗/workspace/Hackathon/20231027/node_modules/tesseract.js/src/Tesseract.js"],"sourcesContent":["const createWorker = require('./createWorker');\n\nconst recognize = async (image, langs, options) => {\n  const worker = await createWorker(langs, 1, options);\n  return worker.recognize(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nconst detect = async (image, options) => {\n  const worker = await createWorker('osd', 0, options);\n  return worker.detect(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nmodule.exports = {\n  recognize,\n  detect,\n};\n"],"mappings":";;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE9C,IAAMC,SAAS;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,SAAOC,KAAK,EAAEC,KAAK,EAAEC,OAAO;IAAA,IAAAC,MAAA;IAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;QAAA;UAAAF,SAAA,CAAAE,IAAA;UAAA,OACvBhB,YAAY,CAACS,KAAK,EAAE,CAAC,EAAEC,OAAO,CAAC;QAAA;UAA9CC,MAAM,GAAAG,SAAA,CAAAG,IAAA;UAAA,OAAAH,SAAA,CAAAI,MAAA,WACLP,MAAM,CAACT,SAAS,CAACM,KAAK,CAAC,CAC3BW,OAAO,eAAAf,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAc,QAAA;YAAA,OAAAf,mBAAA,GAAAO,IAAA,UAAAS,SAAAC,QAAA;cAAA,kBAAAA,QAAA,CAAAP,IAAA,GAAAO,QAAA,CAAAN,IAAA;gBAAA;kBAAAM,QAAA,CAAAN,IAAA;kBAAA,OACDL,MAAM,CAACY,SAAS,CAAC,CAAC;gBAAA;gBAAA;kBAAA,OAAAD,QAAA,CAAAE,IAAA;cAAA;YAAA,GAAAJ,OAAA;UAAA,CACzB,GAAC;QAAA;QAAA;UAAA,OAAAN,SAAA,CAAAU,IAAA;MAAA;IAAA,GAAAjB,QAAA;EAAA,CACL;EAAA,gBANKL,SAASA,CAAAuB,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAxB,IAAA,CAAAyB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAMd;AAED,IAAMC,MAAM;EAAA,IAAAC,KAAA,GAAA3B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA0B,SAAOxB,KAAK,EAAEE,OAAO;IAAA,IAAAC,MAAA;IAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAqB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAnB,IAAA,GAAAmB,SAAA,CAAAlB,IAAA;QAAA;UAAAkB,SAAA,CAAAlB,IAAA;UAAA,OACbhB,YAAY,CAAC,KAAK,EAAE,CAAC,EAAEU,OAAO,CAAC;QAAA;UAA9CC,MAAM,GAAAuB,SAAA,CAAAjB,IAAA;UAAA,OAAAiB,SAAA,CAAAhB,MAAA,WACLP,MAAM,CAACmB,MAAM,CAACtB,KAAK,CAAC,CACxBW,OAAO,eAAAf,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAA6B,SAAA;YAAA,OAAA9B,mBAAA,GAAAO,IAAA,UAAAwB,UAAAC,SAAA;cAAA,kBAAAA,SAAA,CAAAtB,IAAA,GAAAsB,SAAA,CAAArB,IAAA;gBAAA;kBAAAqB,SAAA,CAAArB,IAAA;kBAAA,OACDL,MAAM,CAACY,SAAS,CAAC,CAAC;gBAAA;gBAAA;kBAAA,OAAAc,SAAA,CAAAb,IAAA;cAAA;YAAA,GAAAW,QAAA;UAAA,CACzB,GAAC;QAAA;QAAA;UAAA,OAAAD,SAAA,CAAAV,IAAA;MAAA;IAAA,GAAAQ,QAAA;EAAA,CACL;EAAA,gBANKF,MAAMA,CAAAQ,GAAA,EAAAC,GAAA;IAAA,OAAAR,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAMX;AAEDW,MAAM,CAACC,OAAO,GAAG;EACfvC,SAAS,EAATA,SAAS;EACT4B,MAAM,EAANA;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}