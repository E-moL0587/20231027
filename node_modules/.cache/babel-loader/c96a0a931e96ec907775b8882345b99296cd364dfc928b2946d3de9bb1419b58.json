{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u7AF9\\u5185 \\u6D77\\u6597\\\\workspace\\\\Hackathon\\\\20231027\\\\src\\\\components\\\\4_OCR.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Tesseract from 'tesseract.js';\nimport db from '../firebase';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OCR({\n  image,\n  clipPath,\n  onRestart,\n  onExit,\n  albumId\n}) {\n  _s();\n  const [text, setText] = useState('');\n\n  // データを保存する\n  const handleSave = async () => {\n    await addDoc(collection(db, albumId), {\n      field1: image,\n      field2: text\n    });\n    alert('保存されました！');\n  };\n  useEffect(() => {\n    // OCR処理\n    const doOCR = async () => {\n      const {\n        data\n      } = await Tesseract.recognize(image, 'jpn', {\n        logger: m => console.log(m)\n      });\n      const cleanedText = data.text.replace(/ /g, '');\n      setText(cleanedText);\n    };\n    doOCR();\n  }, [image]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u64AE\\u5F71\\u3055\\u308C\\u305F\\u753B\\u50CF\\u306F\\u3053\\u3061\\u3089\\u3067\\u3059\\uFF01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"\\u753B\\u50CF\",\n      style: {\n        clipPath: clipPath,\n        width: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 80\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onRestart,\n      children: \"\\u3082\\u3046\\u4E00\\u5EA6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onExit,\n      children: \"\\u7D42\\u4E86\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"\\u4FDD\\u5B58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u62BD\\u51FA\\u3057\\u305F\\u6587\\u5B57\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(OCR, \"4ujWDM02ns4tez/JXYjL1bw6ipA=\");\n_c = OCR;\nexport default OCR;\nvar _c;\n$RefreshReg$(_c, \"OCR\");","map":{"version":3,"names":["React","useState","useEffect","Tesseract","db","collection","addDoc","jsxDEV","_jsxDEV","OCR","image","clipPath","onRestart","onExit","albumId","_s","text","setText","handleSave","field1","field2","alert","doOCR","data","recognize","logger","m","console","log","cleanedText","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/竹内 海斗/workspace/Hackathon/20231027/src/components/4_OCR.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Tesseract from 'tesseract.js';\r\nimport db from '../firebase';\r\nimport { collection, addDoc } from 'firebase/firestore';\r\n\r\nfunction OCR({ image, clipPath, onRestart, onExit, albumId }) {\r\n  const [text, setText] = useState('');\r\n\r\n  // データを保存する\r\n  const handleSave = async () => {\r\n    await addDoc(collection(db, albumId), { field1: image, field2: text });\r\n    alert('保存されました！');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // OCR処理\r\n    const doOCR = async () => {\r\n      const { data } = await Tesseract.recognize(image, 'jpn', { logger: (m) => console.log(m) });\r\n      const cleanedText = data.text.replace(/ /g, '');\r\n\r\n      setText(cleanedText);\r\n    };\r\n    doOCR();\r\n  }, [image]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>撮影された画像はこちらです！</h2>\r\n      <img src={image} alt=\"画像\" style={{ clipPath: clipPath, width: '50%' }} /><br />\r\n      <button onClick={onRestart}>もう一度</button>\r\n      <button onClick={onExit}>終了する</button>\r\n      <button onClick={handleSave}>保存</button>\r\n      <h2>抽出した文字</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OCR;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}