{"ast":null,"code":"var _regeneratorRuntime = require(\"C:/Users/\\u7AF9\\u5185 \\u6D77\\u6597/workspace/Hackathon/20231027/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _toConsumableArray = require(\"C:/Users/\\u7AF9\\u5185 \\u6D77\\u6597/workspace/Hackathon/20231027/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/\\u7AF9\\u5185 \\u6D77\\u6597/workspace/Hackathon/20231027/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _this = this;\nvar createJob = require('./createJob');\nvar _require = require('./utils/log'),\n  log = _require.log;\nvar getId = require('./utils/getId');\nvar schedulerCounter = 0;\nmodule.exports = function () {\n  var id = getId('Scheduler', schedulerCounter);\n  var workers = {};\n  var runningWorkers = {};\n  var jobQueue = [];\n  schedulerCounter += 1;\n  var getQueueLen = function getQueueLen() {\n    return jobQueue.length;\n  };\n  var getNumWorkers = function getNumWorkers() {\n    return Object.keys(workers).length;\n  };\n  var dequeue = function dequeue() {\n    if (jobQueue.length !== 0) {\n      var wIds = Object.keys(workers);\n      for (var i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n  var queue = function queue(action, payload) {\n    return new Promise(function (resolve, reject) {\n      var job = createJob({\n        action: action,\n        payload: payload\n      });\n      jobQueue.push( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(w) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                jobQueue.shift();\n                runningWorkers[w.id] = job;\n                _context.prev = 2;\n                _context.t0 = resolve;\n                _context.next = 6;\n                return w[action].apply(_this, [].concat(_toConsumableArray(payload), [job.id]));\n              case 6:\n                _context.t1 = _context.sent;\n                (0, _context.t0)(_context.t1);\n                _context.next = 13;\n                break;\n              case 10:\n                _context.prev = 10;\n                _context.t2 = _context[\"catch\"](2);\n                reject(_context.t2);\n              case 13:\n                _context.prev = 13;\n                delete runningWorkers[w.id];\n                dequeue();\n                return _context.finish(13);\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, null, [[2, 10, 13, 17]]);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n      log(\"[\".concat(id, \"]: Add \").concat(job.id, \" to JobQueue\"));\n      log(\"[\".concat(id, \"]: JobQueue length=\").concat(jobQueue.length));\n      dequeue();\n    });\n  };\n  var addWorker = function addWorker(w) {\n    workers[w.id] = w;\n    log(\"[\".concat(id, \"]: Add \").concat(w.id));\n    log(\"[\".concat(id, \"]: Number of workers=\").concat(getNumWorkers()));\n    dequeue();\n    return w.id;\n  };\n  var addJob = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(action) {\n      var _len,\n        payload,\n        _key,\n        _args2 = arguments;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(getNumWorkers() === 0)) {\n              _context2.next = 2;\n              break;\n            }\n            throw Error(\"[\".concat(id, \"]: You need to have at least one worker before adding jobs\"));\n          case 2:\n            for (_len = _args2.length, payload = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              payload[_key - 1] = _args2[_key];\n            }\n            return _context2.abrupt(\"return\", queue(action, payload));\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function addJob(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var terminate = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            Object.keys(workers).forEach( /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(wid) {\n                return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                  while (1) switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return workers[wid].terminate();\n                    case 2:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }, _callee3);\n              }));\n              return function (_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n            jobQueue = [];\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return function terminate() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return {\n    addWorker: addWorker,\n    addJob: addJob,\n    terminate: terminate,\n    getQueueLen: getQueueLen,\n    getNumWorkers: getNumWorkers\n  };\n};","map":{"version":3,"names":["createJob","require","_require","log","getId","schedulerCounter","module","exports","id","workers","runningWorkers","jobQueue","getQueueLen","length","getNumWorkers","Object","keys","dequeue","wIds","i","queue","action","payload","Promise","resolve","reject","job","push","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","w","wrap","_callee$","_context","prev","next","shift","t0","apply","_this","concat","_toConsumableArray","t1","sent","t2","finish","stop","_x","arguments","addWorker","addJob","_ref2","_callee2","_len","_key","_args2","_callee2$","_context2","Error","Array","abrupt","_x2","terminate","_ref3","_callee4","_callee4$","_context4","forEach","_ref4","_callee3","wid","_callee3$","_context3","_x3"],"sources":["C:/Users/竹内 海斗/workspace/Hackathon/20231027/node_modules/tesseract.js/src/createScheduler.js"],"sourcesContent":["const createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\n\nlet schedulerCounter = 0;\n\nmodule.exports = () => {\n  const id = getId('Scheduler', schedulerCounter);\n  const workers = {};\n  const runningWorkers = {};\n  let jobQueue = [];\n\n  schedulerCounter += 1;\n\n  const getQueueLen = () => jobQueue.length;\n  const getNumWorkers = () => Object.keys(workers).length;\n\n  const dequeue = () => {\n    if (jobQueue.length !== 0) {\n      const wIds = Object.keys(workers);\n      for (let i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n\n  const queue = (action, payload) => (\n    new Promise((resolve, reject) => {\n      const job = createJob({ action, payload });\n      jobQueue.push(async (w) => {\n        jobQueue.shift();\n        runningWorkers[w.id] = job;\n        try {\n          resolve(await w[action].apply(this, [...payload, job.id]));\n        } catch (err) {\n          reject(err);\n        } finally {\n          delete runningWorkers[w.id];\n          dequeue();\n        }\n      });\n      log(`[${id}]: Add ${job.id} to JobQueue`);\n      log(`[${id}]: JobQueue length=${jobQueue.length}`);\n      dequeue();\n    })\n  );\n\n  const addWorker = (w) => {\n    workers[w.id] = w;\n    log(`[${id}]: Add ${w.id}`);\n    log(`[${id}]: Number of workers=${getNumWorkers()}`);\n    dequeue();\n    return w.id;\n  };\n\n  const addJob = async (action, ...payload) => {\n    if (getNumWorkers() === 0) {\n      throw Error(`[${id}]: You need to have at least one worker before adding jobs`);\n    }\n    return queue(action, payload);\n  };\n\n  const terminate = async () => {\n    Object.keys(workers).forEach(async (wid) => {\n      await workers[wid].terminate();\n    });\n    jobQueue = [];\n  };\n\n  return {\n    addWorker,\n    addJob,\n    terminate,\n    getQueueLen,\n    getNumWorkers,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}